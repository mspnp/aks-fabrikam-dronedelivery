#  ------------------------------------------------------------
#   Copyright (c) Microsoft Corporation.  All rights reserved.
#   Licensed under the MIT License (MIT). See License.txt in the repo root for license information.
#  ------------------------------------------------------------

###################################################################################################
# Workflow
###################################################################################################
{{- $fullname := include "workflow.fullname" . | replace "." "" }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ $fullname  }}
  labels:
    app.kubernetes.io/name: {{ include "workflow.name" . }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
    app.kubernetes.io/version: {{ .Chart.AppVersion }}
    app.kubernetes.io/component: backend
    app.kubernetes.io/part-of: dronedelivery
    helm.sh/chart: {{ include "workflow.chart" . }}
    aadpodidbinding: {{ $fullname  }}
  annotations:
    kubernetes.io/change-cause: {{ .Values.reason }}
spec:
  replicas: {{ default 1 .Values.replicaCount }}
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "workflow.name" . }}
      app.kubernetes.io/instance: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ include "workflow.name" . }}
        app.kubernetes.io/instance: {{ .Release.Name }}
        app.kubernetes.io/managed-by: {{ .Release.Service }}
        app.kubernetes.io/version: {{ .Chart.AppVersion }}
        app.kubernetes.io/component: backend
        app.kubernetes.io/part-of: dronedelivery
        helm.sh/chart: {{ include "workflow.chart" . }}
        aadpodidbinding: {{ $fullname  }}
{{ toYaml .Values.workflow.customPodLabels | indent 8 }}
    spec:
      securityContext:
        fsGroup: 1
      containers:
      - name: fabrikam-workflow
        image: {{ .Values.dockerregistry }}{{ .Values.dockerregistrynamespace }}/{{ .Values.image.repository }}:{{ .Values.image.tag }}
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        readinessProbe:
          exec:
            command:
{{- range .Values.readinessProbe.exec.command }}
            - {{ . | quote }}
{{- end }}
{{- if .Values.readinessProbe.initialDelaySeconds }}
          initialDelaySeconds: {{ .Values.readinessProbe.initialDelaySeconds }}
{{- end }}
{{- if .Values.readinessProbe.periodSeconds }}
          periodSeconds: {{ .Values.readinessProbe.periodSeconds }}
{{- end }}
{{- if .Values.readinessProbe.timeoutSeconds }}
          timeoutSeconds: {{ .Values.readinessProbe.timeoutSeconds }}
{{- end }}
{{- if .Values.readinessProbe.failureThreshold }}
          failureThreshold: {{ .Values.readinessProbe.failureThreshold }}
{{- end }}
        livenessProbe:
          exec:
            command:
{{- range .Values.livenessProbe.exec.command }}
            - {{ . | quote }}
{{- end }}
{{- if .Values.livenessProbe.initialDelaySeconds }}
          initialDelaySeconds: {{ .Values.livenessProbe.initialDelaySeconds }}
{{- end }}
{{- if .Values.livenessProbe.periodSeconds }}
          periodSeconds: {{ .Values.livenessProbe.periodSeconds }}
{{- end }}
{{- if .Values.livenessProbe.timeoutSeconds }}
          timeoutSeconds: {{ .Values.livenessProbe.timeoutSeconds }}
{{- end }}
{{- if .Values.livenessProbe.failureThreshold }}
          failureThreshold: {{ .Values.livenessProbe.failureThreshold }}
{{- end }}
        resources:
          requests:
            cpu:   {{ required "A valid .Values.resources.requests.cpu entry required!" .Values.resources.requests.cpu }}
            memory: {{ required "A valid .Values.resources.requests.memory entry required!" .Values.resources.requests.memory }}
          limits:
            cpu:   {{ required "A valid .Values.resources.limits.cpu entry required!" .Values.resources.limits.cpu }}
            memory: {{ required "A valid .Values.resources.limits.memory entry required!" .Values.resources.limits.memory }}
        volumeMounts:
        - name: workflow
          mountPath: /csimnt
          readOnly: true
        env:
        - name: CONFIGURATION_FOLDER
          value: /csimnt
        - name: HEALTHCHECK_INITIAL_DELAY
          value: {{ default "30000" .Values.healthcheck.delay | quote }}
        - name: SERVICE_URI_DELIVERY
          value: {{ .Values.serviceuri.delivery }}
        - name: SERVICE_URI_DRONE
          value: {{ .Values.serviceuri.drone }}
        - name: SERVICE_URI_PACKAGE
          value: {{ .Values.serviceuri.package }}
        - name: SERVICEREQUEST__MAXRETRIES
          value: "{{ .Values.servicerequest.maxretries }}"
        - name: SERVICEREQUEST__CIRCUITBREAKERTHRESHOLD
          value: "{{ .Values.servicerequest.circuitbreakerthreshold }}"
        - name: SERVICEREQUEST__CIRCUITBREAKERSAMPLINGPERIODSECONDS
          value: "{{ .Values.servicerequest.circuitbreakersamplingperiodseconds }}"
        - name: SERVICEREQUEST__CIRCUITBREAKERMINIMUMTHROUGHPUT
          value: "{{ .Values.servicerequest.circuitbreakerminimumthroughput }}"
        - name: SERVICEREQUEST__CIRCUITBREAKERBREAKDURATION
          value: "{{ .Values.servicerequest.circuitbreakerbreakduration }}"
        - name: SERVICEREQUEST__MAXBULKHEADSIZE
          value: "{{ .Values.servicerequest.maxbulkheadsize }}"
        - name: SERVICEREQUEST__MAXBULKHEADQUEUESIZE
          value: "{{ .Values.servicerequest.maxbulkheadqueuesize }}"
        - name: LOGGING__ApplicationInsights__LOGLEVEL__DEFAULT
          value: {{ default "Error" .Values.telemetry.level | quote }}
        - name: no_proxy
          value: 169.254.169.254
      volumes:
      - name: workflow
        csi:
          driver: secrets-store.csi.k8s.io
          readOnly: true
          volumeAttributes:
            secretProviderClass: "workflow-secrets-csi-akv"
