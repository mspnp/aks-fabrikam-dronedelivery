{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "nodepoolSubnetResourceIds": {
            "type": "array",
            "metadata": {
                "description": "Subnet resource Ids for all AKS clusters nodepools in all attached spokes to allow necessary outbound traffic through the firewall"
            }
        },
        "location": {
            "defaultValue": "eastus2",
            "type": "string",
            "allowedValues": [
                "australiaeast",
                "canadacentral",
                "centralus",
                "eastus",
                "eastus2",
                "westus2",
                "francecentral",
                "germanywestcentral",
                "northeurope",
                "southafricanorth",
                "southcentralus",
                "uksouth",
                "westeurope",
                "japaneast",
                "southeastasia"
            ],
            "metadata": {
                "description": "The hub's regional affinity. All resources tied to this hub will also be homed in this region.  The network team maintains this approved regional list which is a subset of zones with Availability Zone support."
            }
        },
        "hubVnetAddressSpace": {
            "defaultValue": "10.200.0.0/24",
            "type": "string",
            "maxLength": 18,
            "minLength": 10,
            "metadata": {
                "description": "A /24 to contain the firewall, management, and gateway subnet"
            }
        },
        "azureFirewallSubnetAddressSpace": {
            "defaultValue": "10.200.0.0/26",
            "type": "string",
            "maxLength": 18,
            "minLength": 10,
            "metadata": {
                "description": "A /26 under the VNet Address Space for Azure Firewall"
            }
        },
        "azureGatewaySubnetAddressSpace": {
            "defaultValue": "10.200.0.64/27",
            "type": "string",
            "maxLength": 18,
            "minLength": 10,
            "metadata": {
                "description": "A /27 under the VNet Address Space for our On-Prem Gateway"
            }
        },
        "azureBastionSubnetAddressSpace": {
            "defaultValue": "10.200.0.96/27",
            "type": "string",
            "maxLength": 18,
            "minLength": 10,
            "metadata": {
                "description": "A /27 under the VNet Address Space for Azure Bastion"
            }
        },
        "serviceTagsLocation": {
            "type": "string",
            "defaultValue": "EastUS2",
            "allowedValues": [
                "CentralUS",
                "WestUS",
                "EastUS2",
                "WestUS2",
                "FranceCentral",
                "NorthEurope",
                "UKSouth",
                "WestEurope",
                "JapanEast",
                "SoutheastAsia"
            ],
            "metadata": {
                "description": "the location that will be used from the Azure Firewall rules to regionally allow establishing connections against Azure specific services."
            }
        },
        "acrServers": {
            "type": "array",
            "defaultValue": ["*.azurecr.io"],
            "metadata": {
                "description": "the Fabrikam Shipping Drone Delivery 00's Azure Container Registries server names for dev-qa-staging and production."
            }
        },
        "deliveryRedisHostNames": {
            "type": "array",
            "defaultValue": ["*.redis.cache.windows.net"],
            "metadata": {
                "description": "the Azure Redis Caches names for the Fabrikam Shipping Drone Delivery 00's delivery app in dev-qa-staging and production. It will be used to create an Azure Firewall FQDN Application Rule."
            }
        }
    },
    "variables": {
        "aksIpGroupName": "[concat('ipg-', parameters('location'), '-AksNodepools')]",
        "defaultFwPipName": "[concat('pip-fw-', parameters('location'), '-default')]",
        "hubFwName": "[concat('fw-', parameters('location'), '-hub')]",
        "hubVNetName": "[concat('vnet-', parameters('location'), '-hub')]",
        "hubLaName": "[concat('la-networking-hub-', parameters('location'),'-',uniqueString(resourceId('Microsoft.Network/virtualNetworks',variables('hubVnetName'))))]"
    },
    "resources": [
        {
            "type": "Microsoft.Network/virtualNetworks",
            "apiVersion": "2019-11-01",
            "name": "[variables('hubVnetName')]",
            "location": "[parameters('location')]",
            "properties": {
                "addressSpace": {
                    "addressPrefixes": [
                        "[parameters('hubVnetAddressSpace')]"
                    ]
                },
                "subnets": [
                    {
                        "name": "AzureFirewallSubnet",
                        "properties": {
                            "addressPrefix": "[parameters('azureFirewallSubnetAddressSpace')]"
                        }
                    },
                    {
                        "name": "GatewaySubnet",
                        "properties": {
                            "addressPrefix": "[parameters('azureGatewaySubnetAddressSpace')]",
                            "serviceEndpoints": [
                            ]
                        }
                    },
                    {
                        "name": "AzureBastionSubnet",
                        "properties": {
                            "addressPrefix": "[parameters('azureBastionSubnetAddressSpace')]",
                            "serviceEndpoints": [
                            ]
                        }
                    }
                ],
                "enableDdosProtection": false,
                "enableVmProtection": false
            }
        },
        {
            "apiVersion": "2019-11-01",
            "type": "Microsoft.Network/publicIpAddresses",
            "name": "[variables('defaultFwPipName')]",
            "location": "[parameters('location')]",
            "sku": {
                "name": "Standard"
            },
            "properties": {
                "publicIPAllocationMethod": "Static",
                "idleTimeoutInMinutes": 4,
                "publicIPAddressVersion": "IPv4"
            }
        },
        {
            "type": "Microsoft.Network/ipGroups",
            "apiVersion": "2019-11-01",
            "location": "[parameters('location')]",
            "name": "[variables('aksIpGroupName')]",
            "properties": {
                "copy": [
                    {
                        "name": "ipAddresses",
                        "count": "[length(parameters('nodepoolSubnetResourceIds'))]",
                        "input": "[reference(parameters('nodepoolSubnetResourceIds')[copyIndex('ipAddresses')], '2019-11-01').addressPrefix]"
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Network/azureFirewalls",
            "apiVersion": "2019-11-01",
            "name": "[variables('hubFwName')]",
            "location": "[parameters('location')]",
            "zones": [
                "1",
                "2",
                "3"
            ],
            "dependsOn": [
                "[resourceId('Microsoft.Network/publicIpAddresses', variables('defaultFwPipName'))]",
                "[resourceId('Microsoft.Network/virtualNetworks', variables('hubVnetName'))]",
                "[resourceId('Microsoft.Network/ipGroups', variables('aksIpGroupName'))]"
            ],
            "properties": {
                "sku": {
                    "name": "AZFW_VNet",
                    "tier": "Standard"
                },
                "threatIntelMode": "Alert",
                "ipConfigurations": [
                    {
                        "name": "[variables('defaultFwPipName')]",
                        "properties": {
                            "subnet": {
                                "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('hubVnetName'), 'AzureFirewallSubnet')]"
                            },
                            "publicIPAddress": {
                                "id": "[resourceId('Microsoft.Network/publicIpAddresses', variables('defaultFwPipName'))]"
                            }
                        }
                    }
                ],
                "natRuleCollections": [
                ],
                "networkRuleCollections": [
                    {
                        "name": "org-wide-allowed",
                        "properties": {
                            "action": {
                                "type": "Allow"
                            },
                            "priority": 100,
                            "rules": [
                                {
                                    "name": "dns",
                                    "sourceAddresses": [
                                        "*"
                                    ],
                                    "protocols": [
                                        "UDP"
                                    ],
                                    "destinationAddresses": [
                                        "*"
                                    ],
                                    "destinationPorts": [
                                        "53"
                                    ]
                                },
                                {
                                    "name": "ntp",
                                    "description": "Network Time Protocol (NTP) time synchronization",
                                    "sourceAddresses": [
                                        "*"
                                    ],
                                    "protocols": [
                                        "UDP"
                                    ],
                                    "destinationPorts": [
                                        "123"
                                    ],
                                    "destinationAddresses": [
                                        "*"
                                    ]
                                }
                            ]
                        }
                    },
                    {
                        "name": "AKS-Global-Requirements",
                        "properties": {
                            "action": {
                                "type": "Allow"
                            },
                            "priority": 200,
                            "rules": [
                                {
                                    "name": "tunnel-front-pod-tcp",
                                    "description": "Tunnel front pod to communicate with the tunnel end on the API server.  Technically only needed to our API servers.",
                                    "sourceIpGroups": [
                                        "[resourceId('Microsoft.Network/ipGroups', variables('aksIpGroupName'))]"
                                    ],
                                    "protocols": [
                                        "TCP"
                                    ],
                                    "destinationPorts": [
                                        "22",
                                        "9000"
                                    ],
                                    "destinationAddresses": [
                                        "AzureCloud"
                                    ]
                                },
                                {
                                    "name": "tunnel-front-pod-udp",
                                    "description": "Tunnel front pod to communicate with the tunnel end on the API server.  Technically only needed to our API servers.",
                                    "sourceIpGroups": [
                                        "[resourceId('Microsoft.Network/ipGroups', variables('aksIpGroupName'))]"
                                    ],
                                    "protocols": [
                                        "UDP"
                                    ],
                                    "destinationPorts": [
                                        "1194"
                                    ],
                                    "destinationAddresses": [
                                        "AzureCloud"
                                    ]
                                },
                                {
                                    "name": "managed-k8s-api-tcp-443",
                                    "description": "in-cluster apps could contact the Kubernetes Api Server using its endpoing IP address without providing the SNI extension, something which is not allowed by Azure Firewall. This rule takes care of it by allowing to establish connections against well-known Azure Public Ip addresses over the port 443. For instance this will be the case of Azure AD Pod identity if it does not reside within the kube-system namespace or Azure Application Gateway Ingress Controller",
                                    "protocols": [
                                        "TCP"
                                    ],
                                    "sourceIpGroups": [
                                        "[resourceId('Microsoft.Network/ipGroups', variables('aksIpGroupName'))]"
                                    ],
                                    "destinationAddresses": [
                                        "AzureCloud"
                                    ],
                                    "destinationIpGroups": [],
                                    "destinationFqdns": [],
                                    "destinationPorts": [
                                        "443"
                                    ]
                                }
                            ]
                        }
                    },
                    {
                        "name": "AKS-Fabrikam-Shipping-DroneDelivery-00",
                        "properties": {
                            "action": {
                                "type": "Allow"
                            },
                            "priority": 300,
                            "rules": [
                                {
                                    "name": "servicebus",
                                    "description": "Azure Service Bus access for ingestion and workflow apps",
                                    "protocols": [
                                        "TCP"
                                    ],
                                    "sourceIpGroups": [
                                        "[resourceId('Microsoft.Network/ipGroups', variables('aksIpGroupName'))]"
                                    ],
                                    "destinationAddresses": [
                                        "[concat('ServiceBus.',parameters('serviceTagsLocation'))]"
                                    ],
                                    "destinationIpGroups": [],
                                    "destinationFqdns": [],
                                    "destinationPorts": [
                                        "5671"
                                    ]
                                },
                                {
                                    "name": "azure-cosmosdb",
                                    "description": "Azure Cosmos Db access for delivery and drone scheduler apps",
                                    "protocols": [
                                        "TCP"
                                    ],
                                    "sourceIpGroups": [
                                        "[resourceId('Microsoft.Network/ipGroups', variables('aksIpGroupName'))]"
                                    ],
                                    "destinationAddresses": [
                                        "[concat('AzureCosmosDB.',parameters('serviceTagsLocation'))]"
                                    ],
                                    "destinationIpGroups": [],
                                    "destinationFqdns": [],
                                    "destinationPorts": [
                                        "443"
                                    ]
                                },
                                {
                                    "name": "azure-mongodb",
                                    "description": "Azure Mongo Db access for package app",
                                    "protocols": [
                                        "TCP"
                                    ],
                                    "sourceIpGroups": [
                                        "[resourceId('Microsoft.Network/ipGroups', variables('aksIpGroupName'))]"
                                    ],
                                    "destinationAddresses": [
                                        "[concat('AzureCosmosDB.',parameters('serviceTagsLocation'))]"
                                    ],
                                    "destinationIpGroups": [],
                                    "destinationFqdns": [],
                                    "destinationPorts": [
                                        "10255"
                                    ]
                                },
                                {
                                    "name": "azure-keyvault",
                                    "description": "Azure Key Vault access for delivery, workflow and dronescheduler apps",
                                    "protocols": [
                                        "TCP"
                                    ],
                                    "sourceIpGroups": [
                                        "[resourceId('Microsoft.Network/ipGroups', variables('aksIpGroupName'))]"
                                    ],
                                    "destinationAddresses": [
                                        "[concat('AzureKeyVault.',parameters('serviceTagsLocation'))]"
                                    ],
                                    "destinationIpGroups": [],
                                    "destinationFqdns": [],
                                    "destinationPorts": [
                                        "443"
                                    ]
                                },
                                {
                                    "name": "azure-monitor",
                                    "protocols": [
                                        "TCP"
                                    ],
                                    "sourceIpGroups": [
                                        "[resourceId('Microsoft.Network/ipGroups', variables('aksIpGroupName'))]"
                                    ],
                                    "destinationAddresses": [
                                        "AzureMonitor"
                                    ],
                                    "destinationIpGroups": [],
                                    "destinationFqdns": [],
                                    "destinationPorts": [
                                        "443"
                                    ]
                                }
                            ]
                        }
                    }
                ],
                "applicationRuleCollections": [
                    {
                        "name": "AKS-Global-Requirements",
                        "properties": {
                            "action": {
                                "type": "Allow"
                            },
                            "priority": 200,
                            "rules": [
                                {
                                    "name": "nodes-to-api-server",
                                    "description": "This address is required for Node <-> API server communication.",
                                    "sourceIpGroups": [
                                        "[resourceId('Microsoft.Network/ipGroups', variables('aksIpGroupName'))]"
                                    ],
                                    "protocols": [
                                        {
                                            "protocolType": "Https",
                                            "port": 443
                                        }
                                    ],
                                    "targetFqdns": [
                                        "*.hcp.eastus2.azmk8s.io",
                                        "*.tun.eastus2.azmk8s.io"
                                    ]
                                },
                                {
                                    "name": "microsoft-container-registry",
                                    "description": "All URLs related to MCR needed by AKS",
                                    "sourceIpGroups": [
                                        "[resourceId('Microsoft.Network/ipGroups', variables('aksIpGroupName'))]"
                                    ],
                                    "protocols": [
                                        {
                                            "protocolType": "Https",
                                            "port": 443
                                        }
                                    ],
                                    "targetFqdns": [
                                        "*.cdn.mscr.io",
                                        "mcr.microsoft.com",
                                        "*.data.mcr.microsoft.com"
                                    ]
                                },
                                {
                                    "name": "management-plane",
                                    "description": "This address is required for Kubernetes GET/PUT operations.",
                                    "sourceIpGroups": [
                                        "[resourceId('Microsoft.Network/ipGroups', variables('aksIpGroupName'))]"
                                    ],
                                    "protocols": [
                                        {
                                            "protocolType": "Https",
                                            "port": 443
                                        }
                                    ],
                                    "targetFqdns": [
                                        "management.azure.com"
                                    ]
                                },
                                {
                                    "name": "aad-auth",
                                    "description": "This address is required for Azure Active Directory authentication.",
                                    "sourceIpGroups": [
                                        "[resourceId('Microsoft.Network/ipGroups', variables('aksIpGroupName'))]"
                                    ],
                                    "protocols": [
                                        {
                                            "protocolType": "Https",
                                            "port": 443
                                        }
                                    ],
                                    "targetFqdns": [
                                        "login.microsoftonline.com"
                                    ]
                                },
                                {
                                    "name": "apt-get",
                                    "description": "This address is the Microsoft packages repository used for cached apt-get operations. Example packages include Moby, PowerShell, and Azure CLI.",
                                    "sourceIpGroups": [
                                        "[resourceId('Microsoft.Network/ipGroups', variables('aksIpGroupName'))]"
                                    ],
                                    "protocols": [
                                        {
                                            "protocolType": "Https",
                                            "port": 443
                                        }
                                    ],
                                    "targetFqdns": [
                                        "packages.microsoft.com"
                                    ]
                                },
                                {
                                    "name": "cluster-binaries",
                                    "description": "This address is for the repository required to install required binaries like kubenet and Azure CNI.",
                                    "sourceIpGroups": [
                                        "[resourceId('Microsoft.Network/ipGroups', variables('aksIpGroupName'))]"
                                    ],
                                    "protocols": [
                                        {
                                            "protocolType": "Https",
                                            "port": 443
                                        }
                                    ],
                                    "targetFqdns": [
                                        "acs-mirror.azureedge.net"
                                    ]
                                },
                                {
                                    "name": "ubuntu-security-patches",
                                    "description": "This address lets the Linux cluster nodes download the required security patches and updates per https://docs.microsoft.com/azure/aks/limit-egress-traffic#optional-recommended-fqdn--application-rules-for-aks-clusters.",
                                    "sourceIpGroups": [
                                        "[resourceId('Microsoft.Network/ipGroups', variables('aksIpGroupName'))]"
                                    ],
                                    "protocols": [
                                        {
                                            "protocolType": "Http",
                                            "port": 80
                                        }
                                    ],
                                    "targetFqdns": [
                                        "security.ubuntu.com",
                                        "azure.archive.ubuntu.com",
                                        "changelogs.ubuntu.com"
                                    ]
                                },
                                {
                                    "name": "azure-monitor",
                                    "description": "All required for Azure Monitor for containers per https://docs.microsoft.com/azure/aks/limit-egress-traffic#azure-monitor-for-containers",
                                    "sourceIpGroups": [
                                        "[resourceId('Microsoft.Network/ipGroups', variables('aksIpGroupName'))]"
                                    ],
                                    "protocols": [
                                        {
                                            "protocolType": "Https",
                                            "port": 443
                                        }
                                    ],
                                    "targetFqdns": [
                                        "dc.services.visualstudio.com",
                                        "*.ods.opinsights.azure.com",
                                        "*.oms.opinsights.azure.com",
                                        "*.microsoftonline.com",
                                        "*.monitoring.azure.com"
                                    ]
                                },
                                {
                                    "name": "azure-policy",
                                    "description": "All required for Azure Policy per https://docs.microsoft.com/azure/aks/limit-egress-traffic#azure-policy",
                                    "sourceIpGroups": [
                                        "[resourceId('Microsoft.Network/ipGroups', variables('aksIpGroupName'))]"
                                    ],
                                    "protocols": [
                                        {
                                            "protocolType": "Https",
                                            "port": 443
                                        }
                                    ],
                                    "targetFqdns": [
                                        "gov-prod-policy-data.trafficmanager.net",
                                        "raw.githubusercontent.com",
                                        "dc.services.visualstudio.com",
                                        "data.policy.core.windows.net",
                                        "store.policy.core.windows.net"
                                    ]
                                }
                            ]
                        }
                    },
                    {
                        "name": "Flux-Requirements",
                        "properties": {
                            "action": {
                                "type": "Allow"
                            },
                            "priority": 300,
                            "rules": [
                                {
                                    "name": "flux-to-github",
                                    "description": "This address is required for Flux <-> Github repository with the desired cluster baseline configuration.",
                                    "sourceIpGroups": [
                                        "[resourceId('Microsoft.Network/ipGroups', variables('aksIpGroupName'))]"
                                    ],
                                    "protocols": [
                                        {
                                            "protocolType": "Https",
                                            "port": 443
                                        }
                                    ],
                                    "targetFqdns": [
                                        "github.com"
                                    ]
                                }
                            ]
                        }
                    },
                    {
                        "name": "AKS-Fabrikam-Shipping-DroneDelivery-00",
                        "properties": {
                            "action": {
                                "type": "Allow"
                            },
                            "priority": 400,
                            "rules": [
                                {
                                    "name": "accompanying-container-registries",
                                    "description": "helm, agic, aad pod idenity, and others",
                                    "protocols": [
                                        {
                                            "protocolType": "https",
                                            "port": "443"
                                        }
                                    ],
                                    "sourceIpGroups": [
                                        "[resourceId('Microsoft.Network/ipGroups', variables('aksIpGroupName'))]"
                                    ],
                                    "targetFqdns": [
                                        "gcr.io",
                                        "storage.googleapis.com",
                                        "aksrepos.azurecr.io",
                                        "*.docker.io",
                                        "*.docker.com"
                                    ]
                                },
                                {
                                    "name": "fabrikam-shipping-dronedelivery-00-container-registries",
                                    "description": "images for delivery, package, workflow, ingestion and drone scheduler apps",
                                    "protocols": [
                                        {
                                            "protocolType": "https",
                                            "port": "443"
                                        }
                                    ],
                                    "sourceIpGroups": [
                                        "[resourceId('Microsoft.Network/ipGroups', variables('aksIpGroupName'))]"
                                    ],
                                    "targetFqdns": "[parameters('acrServers')]"
                                },
                                {
                                    "name": "azure-cache-redis",
                                    "description": "Azure Redis Cache for delivery app",
                                    "protocols": [
                                        {
                                            "protocolType": "https",
                                            "port": "6380"
                                        }
                                    ],
                                    "sourceIpGroups": [
                                        "[resourceId('Microsoft.Network/ipGroups', variables('aksIpGroupName'))]"
                                    ],
                                    "targetFqdns": "[parameters('deliveryRedisHostNames')]"
                                }
                            ]
                        }
                    }
                ]
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces",
            "apiVersion": "2015-11-01-preview",
            "name": "[variables('hubLaName')]",
            "location": "[parameters('location')]",
            "properties": {
                "sku": {
                    "name": "PerGB2018"
                },
                "retentionInDays": 30
            }
        },
        {
            "type": "Microsoft.Network/azureFirewalls/providers/diagnosticSettings",
            "apiVersion": "2017-05-01-preview",
            "name": "[concat(variables('hubFwName'), '/Microsoft.Insights/default')]",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/workspaces', variables('hubLaName'))]",
                "[resourceId('Microsoft.Network/azureFirewalls', variables('hubFwName'))]"
            ],
            "properties": {
                "workspaceId": "[resourceId('Microsoft.OperationalInsights/workspaces', variables('hubLaName'))]",
                "logs": [
                    {
                        "category": "AzureFirewallApplicationRule",
                        "enabled": true
                    },
                    {
                        "category": "AzureFirewallNetworkRule",
                        "enabled": true
                    }
                ],
                "metrics": [
                    {
                        "category": "AllMetrics",
                        "enabled": true
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Network/virtualNetworks/providers/diagnosticSettings",
            "apiVersion": "2017-05-01-preview",
            "name": "[concat(variables('hubVnetName'), '/Microsoft.Insights/default')]",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/workspaces', variables('hubLaName'))]",
                "[resourceId('Microsoft.Network/virtualNetworks', variables('hubVnetName'))]"
            ],
            "properties": {
                "workspaceId": "[resourceId('Microsoft.OperationalInsights/workspaces', variables('hubLaName'))]",
                "metrics": [
                    {
                        "category": "AllMetrics",
                        "enabled": true
                    }
                ]
            }
        }
    ],
    "outputs": {
        "hubVnetId": {
            "value": "[resourceId('Microsoft.Network/virtualNetworks', variables('hubVnetName'))]",
            "type": "string"
        }
    }
}
